//this is the implementation file called project2.cpp
#include <iostream>
#include "vectorheader.h"
#include "matrixheader.h"
#include "imageheader.h"

using namespace std;
//for all times "n" is referneced n just means another test number
int main() {
    //*********************************VECTOR TESTING**************************
    cout << "Testing Vector:" << endl;
    Vector<int> vec(5); // replace 5 with n for different test cases

    for (int i = 0; i < vec.size(); ++i) {
        vec[i] = i + 1; // Fill with 1,2,3, ..., n 
    }

    cout << "Vector contents: ";
    for (int i = 0; i < vec.size(); ++i) {
        cout << vec[i] << " ";
    }
    cout << endl << endl;

    // *******************MATRIX TESTING*************************
    cout << "=== MATRIX TESTING ===" << endl;    Matrix<int> matA(2, 2); // replace 2, 2 with n, n for test cases

    matA.at(0, 0) = 1; matA.at(0, 1) = 2;
    matA.at(1, 0) = 3; matA.at(1, 1) = 4;

    cout << "Matrix A:" << endl;
    matA.print();
    cout << endl;

    // Matrix addition:
    Matrix<int> matB(2, 2);
    matB.at(0, 0) = 5; matB.at(0, 1) = 6;
    matB.at(1, 0) = 7; matB.at(1, 1) = 8;

    cout << "Matrix B:" << endl;
    matB.print();
    cout << endl;

    Matrix<int> matSum = matA + matB;
    cout << "Matrix A + B:" << endl;
    matSum.print();
    cout << endl;

    // Matrix subtraction:
    Matrix<int> matDiff = matA - matB;
    cout << "Matrix A - B:" << endl;
    matDiff.print();
    cout << endl;

    // Matrix scalar multiplication:
    Matrix<int> matScaled = matA * 2; // Multiply every element by n (replace 2 with n)
    cout << "Matrix A * 2:" << endl;
    matScaled.print();
    cout << endl;

    //************************IMAGE TESTING*******************************
    cout << "=== IMAGE TESTING ===" << endl;
    Image<int> imgA(2, 2);
    imgA.at(0, 0) = 10; imgA.at(0, 1) = 20;
    imgA.at(1, 0) = 30; imgA.at(1, 1) = 40;

    cout << "Original Image A:" << endl;
    imgA.print();

    imgA.scale(2);
    cout << "Scaled Image A * 2:" << endl;
    imgA.print();

    Image<int> imgB(2, 2);
    imgB.at(0, 0) = 1; imgB.at(0, 1) = 2;
    imgB.at(1, 0) = 3; imgB.at(1, 1) = 4;

    Image<int> imgMult = imgA.multiply(imgB);
    cout << "Element-wise A * B:" << endl;
    imgMult.print();


    return 0;


}
